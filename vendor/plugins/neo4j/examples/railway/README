* Railway Network Application Example (with JRuby Neo4j bindings)
by Bert Fitié

** A. Network application

(1) Nodes. The nodes are railway stations
(2) Arcs. The arcs are the connections between the stations
(3) Paths. The (named) paths are trains
(4) Usage. The user performs the following navigation:
(4.1) The user selects (loads) a start station
(4.2) The user generates a list of outgoing trains from this station
(4.3) The user selects the train he wants to board from this station
(4.4) The user generates the train path, i.e. the sequence of all
stations visited by this train from this station
(4.5) The user selects (loads) a destination station from this path
(4.6) If this station is the final destination, the user is done,
otherwise, the user continues has travel with (4.2)

** B. Example network

(1) The example network has 8 stations:
Alpha, Bravo, Charlie, Delta, Echo, Foxtrot, Golf, Hotel
(2) The example network has 8 arcs:
(2.1) Alpha - Bravo
(2.2) Bravo - Charlie
(2.3) Charlie - Delta
(2.4) Delta - Echo
(2.5) Alpha - Foxtrot
(2.6) Foxtrot - Charlie
(2.7) Delta - Golf
(2.8) Delta - Hotel
(3) The example network has 3 trains
(3.1) Train t1_ae:
(3.1.1) Alpha (departure 11:00) - Bravo (arrival 11:45)
(3.1.2) Bravo (departure 11:50) - Charlie (arrival 12:30)
(3.1.3) Charlie (departure 12:35) - Delta (arrival 13:00)
(3.1.4) Delta (departure 13:05) - Echo (arrival 14:00)
(3.2) Train t2_ag:
(3.2.1) Alpha (departure 13:15) - Foxtrot (arrival 13:45)
(3.2.2) Foxtrot (departure 13:50) - Charlie (arrival 14:30)
(3.2.3) Charlie (departure 14:35) - Delta (arrival 15:00)
(3.2.4) Delta (departure 15:05) - Golf (arrival 15:45)
(3.3) Train t3_gh:
(3.3.1) Golf (departure 12:30) - Delta (arrival 13:10)
(3.3.2) Delta (departure 13:15) - Hotel (arrival 14:30)

** C. Demo objective

(1) The user selects start station Alpha
Result should be:
 You arrived at station Alpha
(2) The user generates a list of outgoing trains from Alpha
Result should be:
 Train t1_ae: departure 11:00
 Train t2_ag: departure 13:15
(3) The user selects Train t1_ae to board from this station
(4) The user generates the train path for Train t1_ae from Alpha
Result should be:
 Alpha (departure 11:00) - Bravo (arrival 11:45)
 Bravo (departure 11:50) - Charlie (arrival 12:30)
 Charlie (departure 12:35) - Delta (arrival 13:00)
 Delta (departure 13:05) - Echo (arrival 14:00)
(5) The user selects destination station Delta from this path
Result should be:
 You arrived at station Delta
(6) The user generates a list of outgoing trains from Delta
Result should be:
 Train t1_ae: departure 13:05
 Train t2_ag: departure 15:05
 Train t3_gh: departure 13:15
(7) The user selects Train t3_gh to board from this station
(8) The user generates the train path for Train t3_gh from Delta
Result should be:
 Delta (departure 13:15) - Hotel (arrival 14:30)
(9) The user selects final destination station Hotel from this path
Result should be:
 You arrived at station Hotel

 ** D. Data file
See railnet-data.rb

** E. Application file
See railnet-app.rb


 ** F. Demo session

~ $> cd ~/private/sandbox/neo-jruby/examples/railnet
railnet $> jruby railnet-data.rb
railnet $> jirb -r railnet-app
irb(main):001:0> alpha = select_station(1)
 You arrived at station Alpha
irb(main):002:0> list_trains(alpha)
 Train t2_ag: departure: 13:15
 Train t1_ae: departure: 11:00
irb(main):003:0> train_path(alpha, :t1_ae)
 Alpha #1 (departure: 11:00) - Bravo #2 (arrival: 11:45)
 Bravo #2 (departure: 11:50) - Charlie #3 (arrival: 12:30)
 Charlie #3 (departure: 12:35) - Delta #4 (arrival: 13:00)
 Delta #4 (departure: 13:05) - Echo #5 (arrival: 14:00)
irb(main):004:0> delta = select_station(4)
 You arrived at station Delta
irb(main):005:0> list_trains(delta)
 Train t3_gh: departure: 13:15
 Train t2_ag: departure: 15:05
 Train t1_ae: departure: 13:05
irb(main):006:0> train_path(delta, :t3_gh)
 Delta #4 (departure: 13:15) - Hotel #8 (arrival: 14:30)
irb(main):007:0> hotel = select_station(8)
 You arrived at station Hotel
irb(main):008:0>